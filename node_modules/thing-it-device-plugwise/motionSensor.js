module.exports = {
    metadata: {
        family: "motionSensor",
        plugin: "motionSensor",
        label: "Plugwise Â© Smart Motion Sensor",
        tangible: true,
        discoverable: true,
        state: [{
            id: "motion",
            label: "Motion",
            type: {
                id: "boolean"
            }
        }],
        actorTypes: [],
        sensorTypes: [],
        services: [],
        configuration: []
    },
    create: function () {
        return new MotionSensor();
    },
    discovery: function (options) {
        var discovery = new MotionSensorDiscovery();

        discovery.options = options;

        return discovery;
    }
};

var q = require('q');

function MotionSensorDiscovery() {
    /**
     *
     * @param options
     */
    MotionSensorDiscovery.prototype.start = function () {
        if (this.node.isSimulated()) {
        } else {
        }
    };

    /**
     *
     * @param options
     */
    MotionSensorDiscovery.prototype.stop = function () {
    };
}

/**
 *
 */
function MotionSensor() {
    /**
     *
     */
    MotionSensor.prototype.start = function () {
        var deferred = q.defer();

        this.state = {switch: false};

        if (this.isSimulated()) {
            setInterval(function () {
                this.state.motion = new Date().getTime() % 2 == 0;

                this.publishStateChange();
            }.bind(this), 10000);

            deferred.resolve();
        } else {
            deferred.resolve();
        }

        return deferred.promise;
    };

    /**
     *
     */
    MotionSensor.prototype.setState = function (state) {
        this.state = state;

        this.publishStateChange();
    };

    /**
     *
     */
    MotionSensor.prototype.getState = function () {
        return this.state;
    };

    /**
     *
     */
    MotionSensor.prototype.on = function () {
        return this.state.switch = true;

        this.publishStateChange();
    };

    /**
     *
     */
    MotionSensor.prototype.off = function () {
        return this.state.switch = false;

        this.publishStateChange();
    };

    /**
     *
     */
    MotionSensor.prototype.toggle = function () {
        return this.state.switch = !this.state.switch;

        this.publishStateChange();
    };
}
