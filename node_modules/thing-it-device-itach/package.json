{
  "name": "thing-it-device-itach",
  "version": "0.2.11",
  "description": "[thing-it-node] Device Plugin for ITach bridges (e.g. Wifi/IR).",
  "authors": "Marc Gille, Klaus Berberich",
  "license": "MIT, EPL",
  "keywords": [
    "IoT",
    "thing-it",
    "ITach",
    "Infrared",
    "Universal Remote"
  ],
  "repository": {
    "type": "git",
    "url": "git+https://github.com/marcgille/thing-it-device-itach.git"
  },
  "dependencies": {
    "net": "^1.0.2",
    "q": "^1.4.1"
  },
  "readme": "# thing-it-device-itach\n\n[![NPM](https://nodei.co/npm/thing-it-device-itach.png)](https://nodei.co/npm/thing-it-device-itach/)\n[![NPM](https://nodei.co/npm-dl/thing-it-device-itach.png)](https://nodei.co/npm/thing-it-device-itach/)\n\n[thing-it-node] Device Plugin for [ITach Bridges](http://www.globalcache.com/products/itach/) (e.g. Wifi/Infrared).\n\n<img src=\"./documentation/images/itach.jpg\">\n\nThis allows you to \n\n* control the devices you usually control with your IR remotes devices from a mobile UI over the Internet,\n* define complex Services, Event Processing, Storyboards and Jobs combining the IR-controlled devices with other Devices, Sensors and Actors.\n\nby means of [thing-it-node](https://github.com/marcgille/thing-it-node) and [thing-it.com](http://www.thing-it.com).\n\nE.g. you could switch of the TV if the motion detector has not detected any movement in the room for 10 minutes (because you fell asleep) or\nstart your cleaning robot with a more sophisticated schedule. \n\n## Installation\n\n### Installation of NodeJS and [thing-it-node]\n\nFirst, install [nodejs](https://nodejs.org/en/download/) on your computer (e.g. your PC or your Raspberry Pi Zero).\n\nThen install **[thing-it-node]** via\n\n```\nnpm install -g thing-it-node\n```\nNote, that depending on the access right settings on your file system you may need to invoke\n\n```\nsudo npm -g install thing-it-node \n```\n\ninstead.\n \n### Initialization and Start of [thing-it-node] \n\nThe **[thing-it-device-ti-itach]** Plugin is installed with **[thing-it-node]**, hence there is no need to install it separately.\n\nCreate a directory in which you intend to run the configuration, e.g.\n \n```\nmkdir ~/itach-test\ncd ~/itach-test\n```\nand invoke\n\n```\ntin init\n```\n\nand then start **[thing-it-node]** via\n\n```\ntin run\n```\n\nInstall the **thing-it Mobile App** from the Apple Appstore or Google Play and set it up to connect to **[thing-it-node]** \nlocally as described [here](https://thing-it.com/thing-it/#/documentationPanel/mobileClient/connectionModes) or just connect your browser under \n[http://localhost:3001](http://localhost:3001).\n \n### ITach Device Setup\n \nAfter you have \n\n* [set up](http://www.thing-it.com/thing-it/index.html?document=gettingStarted#/documentationPanel) your [thing-it] Node Box and \n* configured or copied a [thing-it] Mesh with an ITach Bridge, \n\nconnect your ITach Bridge to your [thing-it] Node Box via the appropriate settings for the ITach device (IP-Address) and \nconnect the IR Emitters to your devices, e.g. like\n\n<img width=\"40%\" src=\"./documentation/images/emitter-mounting.jpg\">\n\nIf you cannot mount the emitters as sketched, e.g. in case of a moving device like a cleaning robot, you need to use the [ITach Blaster](http://www.globalcache.com/products/other/).\n\n## User Interface\n\nUser Interfaces depend on the remotes you have been using in your [thing-it] Node Mesh/Configuration. E.g. for a [Configuration\nwith a Samsung TV and iRobot Roomba Cleaning Robot](./examples/samsungAndRoombaConfiguration.js):\n\n<img src=\"./documentation/images/samsung-and-roomba-ui.png\">\n\n## Adding your own Remotes\n\nYou can create your own Devices with their own User Interface to send IR commands via the **ITach Bridge**. It just requires \n\n* adding the desired IR commands to a simple JavaScript file (e.g. [iRobotRoombaRemote.js](./iRobotRoombaRemote.js)) and\n* writing a bit of HTML code (e.g. [web/iRobotRoombaRemote.html](./web/iRobotRoombaRemote.html)) to invoke the Device Services to submit the IR commands.\n\nTo obtain the IR commands for your remote control, we have created an **IrSniffer** Device. This (auxiliary) **IrSniffer** Device is autodiscoverable.\n\nTo get access to the **IrSniffer** Device connect the **ITach Brige** to your network and initialize **[thing-it-node]** in an arbitrary \ndirectory with\n\n```\ntin init\n```\n\nand start with\n\n```\ntin run\n```\n\nThe **IrSniffer** Device it will advertise itself in your Mobile App or Browser UI connected to the **[thing-it-node]** instance started above.\n\nAfter you confirmed the Device Registration for the **IrSniffer** you should see\n\n<img src=\"./documentation/images/sniffer-ui.jpg\">\n\nClick all relevant buttons on your remote and record the corresponding codes. With these create a file **myRemote.js** like\n\n```js\nmodule.exports = require(\"./lib/itach\").createExports({\n    family: \"myRemote\", plugin: \"myRemote\",\n    label: \"My Remote\"\n}, {\n    \"button1\": code1,\n    \"button2\": code2,\n    ...\n});\n```\n\nHereby, make sure that you strip the **\"sendir,_module_:_connector_,\"** part from the command.\n\nThen create an **myRemote.html** file under /web, e.g.\n\n```html\n<div style=\"display: table-row;\">\n        <div style=\"display: table-cell; padding: 0.5em;\">\n            <div class=\"circleButton\" ng-click=\"panel.callDeviceService(component, 'button1')\">1\n            </div>\n        </div>\n        <div style=\"display: table-cell; padding: 0.5em;\">\n            <div class=\"circleButton\" ng-click=\"panel.callDeviceService(component, 'button2')\">2\n            </div>\n        </div>\n</div>\n\n```\n\nYou can surely be more creative with your UI and finally get the remote control layout you always wanted.\n\n## Where to go from here ...\n\nAfter completing the above, you may be interested in\n\n* Configuring additional [Devices](https://www.thing-it.com/thing-it/#/documentationPanel/mobileClient/deviceConfiguration), \n[Groups](https://www.thing-it.com/thing-it/#/documentationPanel/mobileClient/groupConfiguration), \n[Services](https://www.thing-it.com/thing-it/#/documentationPanel/mobileClient/serviceConfiguration), \n[Event Processing](https://www.thing-it.com/thing-it/#/documentationPanel/mobileClient/eventConfiguration), \n[Storyboards](https://www.thing-it.com/thing-it/#/documentationPanel/mobileClient/storyboardConfiguration) and \n[Jobs](https://www.thing-it.com/thing-it/#/documentationPanel/mobileClient/jobConfiguration) via your **[thing-it] Mobile App**.\n* Use [thing-it.com](https://www.thing-it.com) to safely connect your Node Box from everywhere, manage complex configurations, store and analyze historical data \nand offer your configurations to others on the **[thing-it] Mesh Market**.\n* Explore other Device Plugins like [Philips Hue](https://www.npmjs.com/package/thing-it-device-philips-hue), [Plugwise Smart Switches](https://www.npmjs.com/package/thing-it-device-plugwise) and many more. For a full set of \nDevice Plugins search for **thing-it-device** on [npm](https://www.npmjs.com/). Or [write your own Plugins](https://github.com/marcgille/thing-it-node/wiki/Plugin-Development-Concepts).\n\n\n\n\n",
  "readmeFilename": "README.md",
  "gitHead": "eafdf1d9a77f59598f3568b0fced016b6fc85eaf",
  "bugs": {
    "url": "https://github.com/marcgille/thing-it-device-itach/issues"
  },
  "homepage": "https://github.com/marcgille/thing-it-device-itach#readme",
  "_id": "thing-it-device-itach@0.2.11",
  "scripts": {},
  "_shasum": "fcb2282fd2f092517901e9f67e8b422209e14262",
  "_from": "thing-it-device-itach@*"
}
