/**
 * This test file allows to run the basic initiation of the
 * HellowWorld class. It does not, however, simulate full
 * interaction with the node.
 */

var FOSCAM = require('../camera');

var foscam = FOSCAM.create({});

foscam.isSimulated = function () {
    return false;
};
foscam.configuration = {
    host: "10.0.1.31",
    port: "80",
    user: "thingit",
    password: "tigniht",
    simulated: false,
    updateTime: 2000,
    hlsLiveStreaming: true,
    webMLiveStreaming: true,
    webMPort: 3002
};

foscam.node = {options: { dataDirectory: "/Users/Klaus/tin/data"}, isSimulated: function(){return false}};
foscam.id = "test01234567890";

foscam.isSimulated = function (){
    return foscam.configuration.simulated;
}

foscam.publishEvent = function(event, data){
    console.log("Event", event);
};
foscam.publishStateChange = function(){
    //console.log("State Change", this.getState());
    console.log("State Change");
};
foscam.logInfo = function(){
    if (arguments.length == 1 ) {
        console.log(arguments[0]);
    }
    else{
        console.log(arguments);
    }
}
foscam.logDebug = function(){
    foscam.logInfo(arguments);
}
foscam.logError = function(){
    foscam.logInfo(arguments);
}

console.log("About to start.");
foscam.start();

/*
setTimeout(function(){foscam.panLeft()}.bind(this), 5000);
setTimeout(function(){foscam.panRight()}.bind(this), 7000);
setTimeout(function(){foscam.tiltUp()}.bind(this), 9000);
setTimeout(function(){foscam.tiltDown()}.bind(this), 11000);
setTimeout(function(){ foscam.savePosition() }, 5000);
setTimeout(function(){ foscam.restorePosition() }, 10000);
*/


