function SensorConfigurationDialog() {
    /**
     *
     */
    SensorConfigurationDialog.prototype.initialize = function (console, device, sensor) {
        this.id = "sensorConfigurationDialog";
        this.console = console;

        this.device = device;

        if (sensor) {
            this.sensor = sensor;
        } else {
            this.sensor = {configuration: {}};
        }

        return this;
    };

    /**
     *
     */
    SensorConfigurationDialog.prototype.show = function () {
        var deferred = $.Deferred();

        deferred.resolve();

        return deferred.promise();
    };

    /**
     *
     */
    SensorConfigurationDialog.prototype.sensorTypeChanged = function () {
        // TODO Into Sensor Module

        var sensorType = this.console.sensorType(this.device, this.sensor.type);

        this.sensor.id = Utils.getNextDefaultId(this.device.sensors, sensorType.plugin, 0);
        this.sensor.label = Utils.getNextDefaultLabel(this.device.sensors, sensorType.label, 0);

        for (var n in sensorType.configuration) {
            if (sensorType.configuration[n].defaultValue) {
                this.sensor.configuration[sensorType.configuration[n].id] = sensorType.configuration[n].defaultValue;
            }
        }
    };

    /**
     *
     */
    SensorConfigurationDialog.prototype.leave = function () {
    };
}
