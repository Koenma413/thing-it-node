function MeshPage() {
    /**
     *
     */
    MeshPage.prototype.initialize = function (console, mesh) {
        this.id = "mesh";
        this.console = console;
        this.mesh = mesh;

        return this;
    };

    /**
     *
     */
    MeshPage.prototype.show = function () {
        var deferred = $.Deferred();

        this.console.consoleService
            .getMesh(this.mesh)
            .done(
            function (mesh) {
                this.mesh = mesh;

                console.log("Mesh >>>", this.mesh);

                // Concurrently load Node states

                for (var n in this.mesh.nodes) {
                    this.console.consoleService.getNodeState(this.mesh.nodes[n]).done(function (state) {
                        this.mesh.nodes[n].state = state.state;
                        this.mesh.nodes[n].lastConfigurationTimestamp = state.lastConfigurationTimestamp;
                        this.mesh.nodes[n].firmwareVersion = state.firmwareVersion;

                        this.console.safeApply();
                    }.bind(this)).fail(function (error) {
                        console.error(error);
                    }.bind(this));
                }

                deferred.resolve();
            }.bind(this)).fail(function (error) {
                console.trace(error);

                deferred.reject(error);
            });

        return deferred.promise();
    };

    /**
     *
     */
    MeshPage.prototype.leave = function () {
    };
}
